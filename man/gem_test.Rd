% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gem_test.R
\name{gem_test}
\alias{gem_test}
\alias{gem_test_sample}
\alias{gem_test_simsample}
\title{Implement Fitted GEM criterior on a Data Set}
\usage{
gem_test_sample(dat, gemObject)

gem_test_simsample(y0, y1, XFrame, gemObject)
}
\arguments{
\item{dat}{Data frame with first column as the treatment index, second column as outcome, and the 
remaining columns as covariates design matrix.}

\item{gemObject}{R object generated by \code{gem_fit} function, which is the second element of the ouput list from \code{gem_fit} function}

\item{y0}{Outcome vector for all subjects under the first treatment assignment}

\item{y1}{Outcome vector for all subjects under the second treatment assignment}

\item{XFrame}{Design matrix of the predictors of the simulated sample with known outcomes under all treatment conditions}
}
\value{
\code{PAB_gem} Population average benefit based on the treatment regime from the GEM fit

\code{PAB_unres} Population average benefit based on on restricted linear model

\code{opt_gem} The optimal treatment assignment for each observation
}
\description{
Implements a fitted GEM on a testing dataset, calculates the population average benefit i.e., value of the treatment decision
}
\details{
The treatment decision rule estimated by the \code{gem_fit} function can be applied to a new (real) data set to estimate its value.  
It can also be applied to a simulated data set, where the outcome is known under both conditions, to study its performance.  
These two functions correspond to those two situations and compute the population average benefit (or the value of the decision).
}
\examples{
#constructing the covariance matrix
co <- matrix(0.2, 10, 10)
diag(co) <- 1
dataEx <- data_generator1(d = 0.3, R2 = 0.5, v2 = 1, n = 3000, 
                         co = co, beta1 = rep(1,10),inter = c(0,0))
#fit the GEM
dat <- dataEx[[1]]
model_nu <- gem_fit(dat = dat, method = "nu")

#calculate the population average benefit in the data sample
gem_test_sample(dat,model_nu[[2]])

#calculate the population average benefit when outcome under both treatment conditions 
#is known, usually in a simulated sample
bigData <- data_generator3(n = 10000,co = co,bet =dataEx[[2]], inter = c(0,0)) 
gem_test_simsample(bigData[[1]],bigData[[2]],bigData[[3]],model_nu[[2]])
}

