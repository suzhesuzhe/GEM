% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gem_test.R
\name{gem_test}
\alias{gem_test}
\alias{gem_test_insample}
\title{Implement Fitted GEM criterior on a Data Set}
\usage{
gem_test_insample(dat, gemObject)
}
\arguments{
\item{dat}{Dataframe with first column as the treatment index, second column as response, and the 
remaining columns as covariates design matrix.}

\item{gemObject}{Object as the second element of the ouput list from gem_fit function}

\item{XFrame}{Design matrix for the predictors of the out-of-sample data set}

\item{y0}{Response for each observation under the first treatment assignment}

\item{y1}{Response for each observation under the second treatment assignment}
}
\value{
\code{PAB_gem} Population average benefit based on the treatment regime from the GEM fit

\code{PAB_unres} Population average benefit based on on restricted linear model
}
\description{
Implement a fitted GEM on a testing dataset, calculate the population average benefit
}
\details{
A GEM fit provides a treatment assignment strategy for two types of data: each subject has only 
one observation of response under certain treatment or has observations of response under both treatments. 
These two gem_test functions are both used to calculate the population average benefit, however, they are designed
for those two types of data respectively.
}
\examples{
#constructing the covariance matrix
co <- matrix(0.2, 10, 10)
diag(co) <- 1
dataEx <- data_generator1(d = 0.3, R2 = 0.5, v2 = 1, n = 3000, co = co, beta1 = rep(1,10),inter = c(0,0))
#fit the GEM
dat <- dataEx[[1]]
model_nu <- gem_fit(dat = dat, method = "nu")

#calculate the population average benefit for dat itself
gem_test_insample(dat,model_nu[[2]])

#calculate the population average benefit for a second type data
bigData <- data_generator3(n = 10000,co = co,bet =dataEx[[2]], inter = c(0,0)) 
gem_test_outsample(bigData[[1]],bigData[[2]],bigData[[3]],model_nu[[2]])
}

